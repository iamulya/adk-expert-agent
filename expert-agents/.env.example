# This file serves as a template for the required environment variables.
# Copy this file to .env and fill in your specific values before running the application locally.
# DO NOT commit the .env file to version control.

# --- Google Cloud Configuration ---

# Your Google Cloud Project ID (e.g., 'my-gcp-project').
# Used for identifying your project for various Google Cloud services.
GCP_PROJECT_ID="your-gcp-project-id"

# Your Google Cloud Project Number (e.g., 123456789012).
# Required for constructing the full resource name for Secret Manager secrets.
# You can find this on the GCP Console home page or by running `gcloud projects describe <GCP_PROJECT_ID> --format='value(projectNumber)'`.
GCP_PROJECT_NUMBER="your-gcp-project-number"

# The name (Secret ID) of the secret in Google Cloud Secret Manager that holds your Gemini API Key.
GEMINI_API_KEY_SECRET_ID="your-gemini-api-key-secret-id"
# Optional: The version of the secret to use (defaults to '1' in the code if not set).
# GEMINI_API_KEY_SECRET_VERSION="latest"

# --- GitHub Configuration ---

# The name (Secret ID) of the secret in Google Cloud Secret Manager that holds your GitHub Personal Access Token (PAT).
# This PAT is used by the `GetGithubIssueDescriptionTool` to make authenticated API requests to GitHub,
# which provides a higher rate limit than unauthenticated requests.
# It needs 'public_repo' scope to read public repository issue details.
GITHUB_API_PAT_SECRET_ID="your-github-pat-secret-id"
# Optional: The version of the secret to use (defaults to '1' in the code if not set).
# GITHUB_API_PAT_SECRET_VERSION="1"

# --- Document/Diagram Generation Configuration ---

# The name of the Google Cloud Storage (GCS) bucket where generated documents (PDF, PPTX) and diagrams (PNG) will be stored.
GCS_BUCKET_NAME_FOR_DOCS="your-gcs-bucket-name"

# The Google Cloud Project ID where the GCS bucket specified above is located.
GCS_PROJECT_ID_FOR_DOCS_BUCKET="your-gcp-project-id"

# The email address of the Google Service Account that will be impersonated to generate signed URLs for GCS objects.
# This service account needs the 'Service Account Token Creator' role on itself.
# It also needs permissions to view the objects in the bucket (e.g., 'Storage Object Viewer' or 'Storage Object Admin').
GCS_SIGNED_URL_SA_EMAIL="your-service-account-email@your-gcp-project-id.iam.gserviceaccount.com"

# The expiration time in seconds for the generated GCS signed URLs.
# Defaults to 3600 (1 hour) if not specified.
SIGNED_URL_EXPIRATION_SECONDS="3600"

# --- Local CLI Tool Paths (Optional) ---
# These are primarily for local development if the CLIs are not in the system's PATH.
# The Docker container installs them in standard locations.

# Optional: The absolute path to the Mermaid CLI (mmdc) executable.
# Defaults to 'mmdc', assuming it's in the system's PATH.
# MERMAID_CLI_PATH="/path/to/your/mmdc"

# Optional: The path to the puppeteer-config.json file.
# This is used by the Mermaid CLI to configure its underlying headless browser instance.
# Defaults to '/app/puppeteer-config.json' inside the Docker container.
# PUPPETEER_CONFIG_PATH="./puppeteer-config.json"